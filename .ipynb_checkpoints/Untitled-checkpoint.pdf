{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e9ecfc9f-d3a1-4628-937a-338057afc910",
   "metadata": {},
   "source": [
    "## Simply put, Logistic Regression is a supervised classification algorithm.\n",
    "\n",
    "### It might be confusing at first as to why is this named as a regression algorithm even though this is a classification algorithm, but the algorithm actually outputs the probability of occurence of an event which is a continous variable (which is later converted to either y=0 or y=1 based on a threshold value). This is why 'regression' appears in the name."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d91ed0aa-b289-4d69-8511-c177dbe87383",
   "metadata": {
    "jupyter": {
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "177ce933-0260-4dec-91be-5eda08ab722d",
   "metadata": {},
   "source": [
    "## Before jumping into the intricacies of Logistic Regression, let's just try fitting a linear model to our classification data and see how the model performs.\n",
    "\n",
    "### Consider a simple dataset where the features would be salaries of the loan applicants and y would represent whether the loan is approved or not.\n",
    "\n",
    "### This would be a binary classification with the two classes being y = 0 ( loan not approved ) and y =1 ( loan approved )."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "e6c875b1-4df5-4f31-bebc-b47d9fbe9d9a",
   "metadata": {
    "jupyter": {
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "a = (np.array(np.arange(1,21)*1000).tolist())\n",
    "b = np.array(np.zeros(int(len(a)/2)).tolist() + np.ones(int(len(a)/2)).tolist())\n",
    "\n",
    "plt.scatter(a,b)\n",
    "plt.ylim(-0.05,1.05)\n",
    "plt.xlabel('Salary')\n",
    "plt.ylabel('Loan Approval')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64b1870b-9fcd-42a1-bd35-093b99167005",
   "metadata": {},
   "source": [
    "### It's easy to deduce from the plot that only the applicants whose salary is greater than 10,000 would have their applications approved. \n",
    "### If we fit a linear model to this plot using Ordinary Least Squares method, it'd look like this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "39f3102c-885c-48ee-aee8-a16537463e19",
   "metadata": {
    "jupyter": {
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "a = (np.array(np.arange(1,21)*1000).tolist())\n",
    "b = np.array(np.zeros(int(len(a)/2)).tolist() + np.ones(int(len(a)/2)).tolist())\n",
    "\n",
    "fig, ax=plt.subplots(figsize=(9,5))\n",
    "ax.scatter(a,b,alpha= 0.3)\n",
    "sns.regplot(a,b,ci=0,ax=ax, label='Linear Model')\n",
    "plt.plot(np.linspace(0,20000,20000), np.zeros(20000)+0.5,'--k', alpha=0.5)\n",
    "plt.plot(np.linspace(10500,10500,50), np.linspace(0,1.6,50), '--k', alpha=0.5)\n",
    "# plt.xlim(0,30)\n",
    "plt.ylim(-0.05,1.05)\n",
    "plt.xlabel('Salary')\n",
    "plt.ylabel('Loan Approval')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30a6d473-a4b5-4502-988e-5f007dea21b4",
   "metadata": {},
   "source": [
    "### The equation of the linear model is:\n",
    "$g({\\theta}) = {\\theta}_{0} + {\\theta}_{1}{x}_{1}$\n",
    "\n",
    "### If we set a threshold value of y=0.5, as seen in the graph, then all the salary values that are greater than 10,000 would be approved for loan according to this linear model. This model actually does a good job of capturing the relationship between the feature and the label. But there's a catch, what if there is are outliers in our data?\n",
    "\n",
    "### Let's now plot the same data along with the outliers and see how the linear model performs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "109a1888-c39e-4a44-8100-4164a32cac05",
   "metadata": {
    "jupyter": {
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "a = np.array(np.arange(1,21).tolist() + [42,48])\n",
    "b = np.array(np.zeros(int(len(a)/2)).tolist() + np.ones(int(len(a)/2)).tolist())\n",
    "\n",
    "fig, ax=plt.subplots(figsize=(9,5))\n",
    "ax.scatter(a,b,alpha= 0.3)\n",
    "sns.regplot(a,b,ci=0,ax=ax)\n",
    "plt.plot(np.linspace(0,50,50), np.zeros(50)+0.5,'--k')\n",
    "plt.plot(np.linspace(13.8,13.8,50), np.linspace(0,1.6,50), '--k')\n",
    "\n",
    "plt.ylim(-0.05,1.05)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3d0529f9-e257-49c9-9385-5c64a8532115",
   "metadata": {},
   "source": [
    "### The model now tilts a little inorder to accomodate the outliers, thereby shifting the threshold salary from 10,000 to around 13,000.\n",
    "\n",
    "### As a result of this, the new linear model would misclassify all the salaries between 10,000 and 13,000  as y=0.\n",
    "\n",
    "### This is when the linear model fails to deliver. Another drawback of using linear models in classification problems is that the linear model does not always return values between 0 and 1, and any value beyond the range of [0,1] would make no sense because the value of probability always lies between 0 and 1.\n",
    "\n",
    "### Inorder to solve this, we'd need a function which takes this linear equation score as input and outputs a number between 0 and 1 and this number would represent the probability that the observation belongs to class y=1. This function is called sigmoid function or logistic function. The formula and plot are as follows:\n",
    "\n",
    "$$h(z) = \\frac{1}{1+e^{-z}} $$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "ff2498e4-467f-40c4-920c-04b9339e3496",
   "metadata": {
    "jupyter": {
     "source_hidden": true
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import math\n",
    "  \n",
    "x = np.linspace(-10, 10, 100)\n",
    "z = 1/(1 + np.exp(-x))\n",
    "  \n",
    "plt.plot(x, z)\n",
    "plt.xlabel(\"z\")\n",
    "plt.ylabel(\"Sigmoid(z)\")\n",
    "plt.title('Sigmoid Function')\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ce151c0-9159-48cc-ae99-001ef2f4302a",
   "metadata": {
    "tags": []
   },
   "source": [
    "### To reiterate, h(z) represents estimated probability that y = 1 on input x.\n",
    "$h( z ) = p(y=1 | x \\text{a }; \\theta $)\n",
    "<br>\n",
    "<br>\n",
    "### It is worth noting from the graph that the sigmoid function:\n",
    " - is almost linear from z=-3 to z=3\n",
    " - asymptotically reaches 0 when z<-3 \n",
    " - asymptotically reaches 1 when z>3\n",
    " - returns 0.5 when z=0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3ce2e6c4-cdb7-4de0-8438-9bef2b4f9a1c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
